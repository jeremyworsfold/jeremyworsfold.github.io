[{"authors":null,"categories":null,"content":"Jeremy is a PhD candidate in Applied Statistical Mathematics at the University of Bath. He is a member of cohort 6 of the SAMBa (Statistical Applied Mathematics Bath) CDT. His current work focuses on the collective behaviour of stochastic interacting agents and its links to kinematic flows and is being supervised by Professor Tim Rogers and Professor Paul Milewski.\nPreviously he read Theoretical Physics at the University of Manchester, writing his thesis on spatial control in football in collaboration with Manchester City Football Club.\n","date":1608543892,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1608543892,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://jeremyworsfold.github.io/author/jeremy-worsfold/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jeremy-worsfold/","section":"authors","summary":"Jeremy is a PhD candidate in Applied Statistical Mathematics at the University of Bath. He is a member of cohort 6 of the SAMBa (Statistical Applied Mathematics Bath) CDT. His current work focuses on the collective behaviour of stochastic interacting agents and its links to kinematic flows and is being supervised by Professor Tim Rogers and Professor Paul Milewski.","tags":null,"title":"Jeremy Worsfold","type":"authors"},{"authors":["Tom Finn"],"categories":["Probability Theory"],"content":"","date":1609755300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609755300,"objectID":"42b38e289649c94dc0e5e7bdb6674e3e","permalink":"https://jeremyworsfold.github.io/pss/tomfinn/","publishdate":"2021-01-04T10:15:00Z","relpermalink":"/pss/tomfinn/","section":"pss","summary":"Random growth processes are paradigmatic in probability theory and describe phenomena in many contexts, such as cancer growth, rumour propagation and population dynamics. In this talk, we will explore some classical growth processes and provide an overview for intriguing mathematical results related to them. In particular, we will see diffusion limited aggregation (DLA), a growth process that has defied a strong mathematical treatment for decades. We will discuss known results for DLA and its variations, culminating in an astonishing recent result by Elboim, Nam, and Sly that describes critical behaviour for the model in dimension one, the only dimension that is known to observe a phase transition. ","tags":["Probability Theory"],"title":"Highlights from the theory of random growth","type":"talk"},{"authors":["Jeremy Worsfold"],"categories":["Scientific Computing","how-to guide"],"content":"This informal guide is for people new to using Balena and effectively want to take code they have written to run on their laptop in something like Python or MATLAB and now run it on Balena. This is by no means exhaustive and there is much more information on the wiki page. In fact, much of the information on Balena here is just condensed from that website. The rest of this guide is general tips on how to transfer files and navigate the environment.\nLogging onto Balena Purely from a terminal If you are on campus you can skip the first step and ssh directly into balena. Otherwise open a terminal and type\nssh user123@linux.bath.ac.uk\r This opens up a link to the uni server (ssh stands for secure shell). Put in your password and then do the same again but change linux to balena:\nssh user123@balena.bath.ac.uk\r Great, you are now in your personal home directory on balena.\nKitty Using the image below taken from the wiki page should be sufficient in explaining how to login using Kitty.\nTransferring data or files Since you are running your code on balena, you will at some point have to move around data using a terminal so I would recommend doing this for all the steps. The added benefit of this is that your commands are stored so you can always just reuse your previous commands using the up arrows if you can\u0026rsquo;t remember exactly what a command should be.\nTo move files between your PC and balena you will sadly have to go through your uni drive unless you are on campus.\nFrom H drive to balena You can simply copy files across using linux cp commands and the fact that your H drive is called $BUCSHOME on balena. For example, run the command\ncp -r folder/with/data $BUCSHOME/destination/folder\r to copy a folder with data from balena to your H drive.\nFrom local PC to H drive You can transfer data to and from University personal drive from your PC by using scp which stands for secure copy and essentially opens up a ssh portal and then closes it again once the files are transferred.\nSending files Type one of these from within a terminal/kitty/putty on your PC:\nscp path/to/directory/f.txt user123@linux.bath.ac.uk:path/to/directory/\rscp -r path/to/directory/ user123@linux.bath.ac.uk:path/to/directory/\r The first will transfer the file file.txt whereas the second will transfer the whole directory.\nRetrieving files This is the same as above but with the directories reversed in order, for example:\nscp user123@linux.bath.ac.uk:path/to/remote/directory/file.txt path/to/local/directory/\r Alternatively if you want, you can use something more familiar which is visual. For linux this would be mounting your Uni drive to your PC using a command called sshfs. For Windows you can download an application called WinSCP which looks like it hasn\u0026rsquo;t changed since 2005 and basically hasn\u0026rsquo;t but it\u0026rsquo;s neat and very useful if that\u0026rsquo;s your thing. A quick google of either of these should give you the information you need. Finally you can use a browser to do this instead if you would like, see here for more details.\nWhere do I store my files? So, I will be the first to admit that I have ran long jobs from my $HOME directory. This is bad. It will work but it is faster and better apparently to run your jobs in the $SCRATCH. It\u0026rsquo;ll be tedious at first but getting used to using simple commands like cp and \\verb!ls! will be really helpful. Make sure to save all of your results rather than just plotting graphs at the end, you never know when you might want to alter figures and need the original data again. I would recommend just saving your data and maybe copying it back to your PC to visualise the results. See my guide on how to layout and use a python package for a small research project for more detailed recommendations on how to handle results and plotting for Python specifically.\nJobscripts The thing you run is the jobscript using the command\nsbatch \u0026lt;name of jobscript\u0026gt;.slm\r Below I\u0026rsquo;ve put in an example jobscript that has been adapted from the one given in the scientific computing module. Make sure you are in the directory of the jobscript when you call it and that the program you want to run is in the same folder or that you have specified where it is in the jobscript.\n#!/bin/bash # # Specify the queue\r#SBATCH\r# Choose name of job (name of executable) #SBATCH --job-name = \u0026lt;name of script\u0026gt;.py # Choose the number of nodes \u0026amp; processors per node: #SBATCH --nodes=1 #SBATCH --ntasks-per-node=1 # # Choose the time your code will need at most:\r#SBATCH --time=05:00:00 # Add any module which need to be loaded here module load python3\recho Running on host `hostname`\recho \u0026quot;Starting job...\u0026quot;\r# Run the python script $SLUTM_JOB_NAME # If your script is in MATLAB obviously this needs to be changed\rpython3 $SLURM_JOB_NAME\r The important bits to check are the job name and the time. For ease I have just made the job name the same as the name of the script you want to run. I\u0026rsquo;ll explain later what the job name is actually used for. Balena allows you free, unlimited usage for jobs which are under 6 hours long so make sure you know approximately how long it will take and change the time given accordingly. Nothing will happen if you overestimate how long you need but it could be helpful for other users to know when their jobs will start if balena is busy and puts your job in ahead of theirs.\nIf you\u0026rsquo;re using MATLAB and the paralellisation package thing that I know nothing about, you\u0026rsquo;ll want to change the number of tasks per node to the maximum of 16 I imagine. Otherwise, unless you\u0026rsquo;ve done clever things with the MPI4pi or multiprocessing packages in python (which I would highly recommend you learn about if you need to run long programs a lot because this could increase your speed by 16 times or more) then you will probably just be using the one processor and so don\u0026rsquo;t need to change anything.\nChecking Jobs You will get an output file with the extension .out telling you everything that happens in the job that would normally printed to the screen if you ran it from a terminal.\nTo check your progress or see if the job has started you can find your jobs by typing\nsqueue -u user123\r ","date":1608543892,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608543892,"objectID":"bfaf2f2779508d6f725d21d9fa6d0ce1","permalink":"https://jeremyworsfold.github.io/post/balenaguide/","publishdate":"2020-12-21T09:44:52Z","relpermalink":"/post/balenaguide/","section":"post","summary":"This informal guide is for people new to using Balena and effectively want to take code they have written to run on their laptop in something like Python or MATLAB and now run it on Balena.","tags":["Scientific Computing","how-to guide"],"title":"A Beginners Guide to using Balena","type":"post"},{"authors":["Jeremy Worsfold"],"categories":["Scientific Computing"],"content":"The world seems to be split into two types of projects. The ones maintained by software engineers committed to maintaining usability, robustness and efficiency of a package. Then there are those entitiled simulation-2_old.py with cut and pasted code from previous versions which has only been looked at by one person. It might seem ovbious which is the better project but the word better here is important.\nThe context of what the code is for is crucial. If all was needed was a short simulation to demonstrate some result then perhaps the second type is a more efficient use of time. The importance of changeability and speed of implementation is an important factor in scientific research.\nThis article tries to present to you a way of balancing these two extremes. There are always more things you can add to a project and this is what I have found works for me but my opinion may also change on what it necessary.\nGeneral things we want our project to do No matter the language you\u0026rsquo;re working in I believe these core ideas are things we want to embody in our project. The main point of them is to give yourself a consistent structure to adapt code and test out new things while maintaining a system and making sure someone else could use it.\n Save data: Saving the results of simulations or processing data is incredibly important. It can be tempting to just make some changes and see what happens but then find out those results would have been useful to revisit and either it takes a while to run them again or you can\u0026rsquo;t remember the parameters you chose. Saving data in an easily understandable format can lots of time in the long run. Separation between visualising results and the simulations or preprocessing: This point follows on from the previous one because if we save our data from the early stages of our workflow then we should be able to load it in an produce all the plots we need from that data. We\u0026rsquo;ve all been there when you realise you labelled your axes incorrectly on a plot of some results which took a couple of hours to run and you don\u0026rsquo;t have the raw data available any more. I\u0026rsquo;ll give more details on why this might be useful later. Good Documentation: Writing documentation such that a layperson could understand you code is definitely too much to ask and is not relevant but it should be good enough that a person familiar with the programming language and the field or research would be able to follow what you have done and why. Distribution: If your work eventually gets published it would be great if a reader could look at your code and run it for themselves so that they can gain the same level of trust in your code as they have for whatever mathematical proofs you have in the text.  Why Python?   (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./annealing.json\", function(chart) { Plotly.plot('chart-826571349', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  Before saying anything else in this section I will acknowledge that ultimately this comes down to personal preference. Each person develops their own style of working and habits or have a specific field of research which lend themselves to particular languages. Before deciding which language to use, consider things such as:\n Support for the things you would like to do: Are there packages associated with the things you want to code in a certain language which will make your life easier? Do you know the language already?: Rarely much use in starting from scratch with a language if it\u0026rsquo;s a small project unless you are particularly interested in learning a new language.  With that out the way, here is my biased case for why python is good for small research projects. The typical cyclical argument for python is that lots of people use so you should use it too. There is a huge community of people using it so chances are there will be applicable, well-maintained packages out there to help you do the things you want.\nIt\u0026rsquo;s incredibly flexible so if the scope of your project changes it\u0026rsquo;s relatively easy to adapt your code or just extend it to add new features. Since this is a small project it\u0026rsquo;s nice to not have to worry about what is sometimes called boiler plate code which can plague lower level languages. Lower level languages often insist you specify the types of your variables or defines destructors to your classes or how data is copied between classes. All of this often allows the code to run faster and ensures it does exactly what you want but slows down your start when all you really want to do is see if your idea works initially.\nPython is rarely the most efficient or fastest language to use out of the box compared with things like MATLAB or R if you use them correctly. However, there is always scope for increasing the efficiency of your code in Python down the line. Initally this can just be making sure you have optimised your code with vectorisation through using numpy. Going deeper you can use things such as the Multiprocessing or MPI4py modules for parallel computing or you could convert the core aspects of your code to Cython or pure C code which can greatly increase the speed of your code. The details of how to do this and the benefits of it might be the subject of a blog another time.\nHow to Structure your Python project This is how I\u0026rsquo;ve chosen to layout my projects, it follows the standard for python packages but has some tweaks for using as a personal project which may not be considered best practice but is relatively easy to use.\nexampleproject\r│ README.md\r│ setup.py\r│\r├───data\r├───docs\r│ optional-documentation.md\r├───exampleproject\r│ │ __init__.py\r│ │\r│ ├───environment\r│ │ base.py\r│ │ derived.py\r│ │ __init__.py\r│ │\r│ └───otherfiles\r│ utils.py\r│ __init__.py\r│\r├───notebooks\r│ 01-feature1.ipynb\r│ 02-feature2.ipynb\r│\r└───scripts\rfeature1.py\r Documentation and Commenting Presenting your findings I find as well that a significant amount of the experimentation happens in the plotting of the raw data. Given some underlying simulation I might want to try out all sorts of different plots and so having the raw data saved allows me to quickly try out visualising a variety of features. Having said this, it can be useful to visualise one or two things while you are producing your data to give you confidence it is all behaving as it should.\nnumber them so there\u0026rsquo;s some structure but maybe not necessary\nload in results, can then just plot it and convert it to some other format to be plotted professionally like pgfplots.\n","date":1607982292,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607982292,"objectID":"fe859c6266641600992fd6a0d6f11947","permalink":"https://jeremyworsfold.github.io/post/post1/","publishdate":"2020-12-14T21:44:52Z","relpermalink":"/post/post1/","section":"post","summary":"The world seems to be split into two types of projects. The ones maintained by software engineers committed to maintaining usability, robustness and efficiency of a package. Then there are those entitiled simulation-2_old.","tags":["Scientific Computing"],"title":"How to use Python for scientific research","type":"post"},{"authors":["Jeremy Worsfold"],"categories":["Scientific Computing"],"content":"How to use Python for scientific research Maintaining a personal Python package for scientific research  Our project should  Save data Separate plotting from time-consuming code Have good documentation Be Distributable   Why Python? It is personal preference however\u0026hellip;\ntest  Auto-Animate\r\rAuto-Animate\r\r Layout Root directory\nexampleproject\r│ README.md\r│ setup.py\r│\r├───data\r├───docs\r├───exampleproject\r├───notebooks\r└───scripts\r    (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./annealing.json\", function(chart) { Plotly.plot('chart-936748125', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  ","date":1607982292,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607982292,"objectID":"22d2fb266efc25a13509f64b3ab441de","permalink":"https://jeremyworsfold.github.io/slides/python-coding/","publishdate":"2020-12-14T21:44:52Z","relpermalink":"/slides/python-coding/","section":"slides","summary":"Maintaining a personal Python package for scientific research","tags":["Scientific Computing"],"title":"How to use Python for scientific research","type":"slides"},{"authors":["Jeremy Worsfold"],"categories":["odes"],"content":"Points from last problem sheet  Main points  Save data Separate plotting from time-consuming code Have good documentation Be Distributable   Summary of last week\u0026rsquo;s lectures  ","date":1607982292,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607982292,"objectID":"0c426c00a3060f7e6fadfa9f5a000e29","permalink":"https://jeremyworsfold.github.io/slides/ma20220week1/","publishdate":"2020-12-14T21:44:52Z","relpermalink":"/slides/ma20220week1/","section":"slides","summary":"summary","tags":["ma20220"],"title":"MA20220 Week 1","type":"slides"},{"authors":["Shahzeb Raja Noureen"],"categories":null,"content":"","date":1607595300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607595300,"objectID":"8ebd419eea8ff22b0cd844395c4e443f","permalink":"https://jeremyworsfold.github.io/pss/shahzeb/","publishdate":"2020-12-10T10:15:00Z","relpermalink":"/pss/shahzeb/","section":"pss","summary":"Investigating the formation of hair follicles","tags":["Mathematical Biology"],"title":"Modelling hair follicle development and formation of periodic patterns of cells.","type":"talk"},{"authors":["Yi Shen Lim"],"categories":["Probability theory","Topology","Measure theory"],"content":"","date":1606990500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606990500,"objectID":"e78c15154b7b241aff9a9993a296ca33","permalink":"https://jeremyworsfold.github.io/pss/yisheng/","publishdate":"2020-12-03T10:15:00Z","relpermalink":"/pss/yisheng/","section":"pss","summary":"Probability is a big subject. My goal for the session will be to give a tour of what kind of maths happens at its core. The basic objects are probability spaces and random variables, which are built on the language of measure theory. My take, however, is that measure theory is just half of the story -- you do not want to do probability on *any* space ... it must be on a space as nice as R. In other words, I would say that the core of probability is about *Probability Measures on Metric Spaces*. This is the title of a book by K R Parthasarathy.\nSo, the tour centres around this book. I will take some time to explain how one should go from A-Level probability and statistics + mathematical analysis (point set topology, metric spaces) to the starting point of this book. Once we have reached the start of the book, I will give a whirlwind tour on the most important ideas in it. The second part is intended to be a touch-and-go, as a cultural appreciation of the language and the results that one can expect in this field. Come by and have fun with probability!","tags":["Probability theory","Topology","Measure theory"],"title":"An Invitation to Probability Theory","type":"talk"},{"authors":["Yvonne Krumbeck"],"categories":["Ecology","complex systems"],"content":"","date":1606385700,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606385700,"objectID":"5750788687e8ce291407a604c7b4f214","permalink":"https://jeremyworsfold.github.io/pss/yvonne/","publishdate":"2020-11-26T10:15:00Z","relpermalink":"/pss/yvonne/","section":"pss","summary":"We can intuitively tell what makes a complex system with interacting components stable. For example in ecosystems, we know that the extinction of a prey species can lead to a mass extinction of predator species that feed on prey to sustain themselves, and genetic diversity helps organisms adapting to changing environments and rapidly evolving diseases. But is there a way to quantify stability with maths?\nWhen mathematicians speak about the stability of ecosystems, they usually refer to the asymptotic stability of an equilibrium point, characterised by the eigenvalues of a species interaction matrix. In reality, however, these interaction coefficients are difficult - if not impossible - to measure. Therefore in 1972, Robert M. May introduced a community matrix model, where coefficients are sampled from a random distribution, and derived a stability criterion based on the distribution of the eigenvalues using random matrix theory. For nearly 50 years, this model has been improved and applied in theoretical ecology.","tags":["Ecology","complex systems"],"title":"Will a Large Complex System be Stable?","type":"talk"},{"authors":["Matt Turner"],"categories":null,"content":"","date":1605780900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1605780900,"objectID":"a58742def960e898f19a55da9571b684","permalink":"https://jeremyworsfold.github.io/pss/mattturner/","publishdate":"2020-11-19T10:15:00Z","relpermalink":"/pss/mattturner/","section":"pss","summary":"It is rare that blowing something up solves a problem - but when it comes to objects with singularities, it turns out to be a good approach! In this talk, I will outline the method of blowing up a singularity of an algebraic variety in order to produce a new variety. This new geometrical object will have very similar properties, but with the added benefit of being less singular, or even smooth.\nAlong the way, I will introduce the notion of projective space and how embedded objects can be seen using charts. Unlike my own research, this geometry can be visualised easily and so there will be plenty of pictures and nice examples to see how blowups work.","tags":["geometry","algebraic geometry"],"title":"Blowups: An algebraic-geometric approach to resolving singularities","type":"talk"},{"authors":["Zoe Dennison"],"categories":["Fluid Dynamics","analysis"],"content":"","date":1605176100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1605176100,"objectID":"0551671dc429b1b76208da34b7c39bf7","permalink":"https://jeremyworsfold.github.io/pss/zoe/","publishdate":"2020-11-12T10:15:00Z","relpermalink":"/pss/zoe/","section":"pss","summary":"In this talk I will give an overview of what I spend my time looking at. I will begin with the Euler and Navier Stokes equations and bring you all the way to the specific case that I am interested in- incompressible, stationary, Euler with helical symmetry and concentrated vorticity. I will try to give an overview and highlight the problems with the research so far whilst trying not to bore you with too many mentions of epsilon.","tags":["Fluid Dynamics","analysis"],"title":"Concentrated Vorticity in the Euler equations","type":"talk"},{"authors":["Will Graham"],"categories":["measure theory"],"content":"The reaction I usually get when I tell people my PhD concerns a large amount of measure theory can be summarised fairly well by the following diagram:\nWhilst having an intricate knowledge of the ins and outs of measure theory is by no means a requirement for many applications of maths in the real world; it does secretly underpin a lot of the more familiar (and friendly!) things that we use in applied maths, and probability. • Have you ever wondered why PDFs are such a big deal when working in probability? • Have you ever used FEM or Fourier transforms to solve a problem? • Have you ever tried to break up a chocolate bar, and then reassemble the pieces into two chocolate bars of equal size to the first????\nDisclaimer: I will be limiting the technical details to the bare minimum I need, and will include diagrams and analogies wherever possible. I’m also not going to be assuming any prior knowledge of measure theory, so anyone should be able to follow along even if they’ve never seen, never heard, or have actively avoided this topic before. It is not my intention to give a technical analysis talk at 10:15 in the morning, no-one wants that, not even me!\n","date":1604571300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604571300,"objectID":"6bb323c97faf859513839b44195b228e","permalink":"https://jeremyworsfold.github.io/pss/willgraham/","publishdate":"2020-11-05T10:15:00Z","relpermalink":"/pss/willgraham/","section":"pss","summary":"In this talk I will aim to provide a crash-course overview of the key concepts behind measure theory, focusing on the construction of the Lebesgue measure. This measure is the one that we all use each day without knowing it - it tells us that the area of a circle is πr2, and justifies the existence of rulers. At the end of this talk everyone will (hopefully) leave with an understanding of how measure theory permeates into other areas of mathematics, and an introductory understanding to the theory as a whole.","tags":["measure theory"],"title":"What is Measure Theory, and How does it Affect Me?","type":"talk"},{"authors":["Jeremy Worsfold"],"categories":null,"content":"","date":1603966500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603966500,"objectID":"d8957e38a5c62dfc557e4b7c0eb8c23c","permalink":"https://jeremyworsfold.github.io/pss/jeremy/","publishdate":"2020-10-29T10:15:00Z","relpermalink":"/pss/jeremy/","section":"pss","summary":"How tech giants are force-feeding us annoyingly useful adverts","tags":["reinforcement learning","recommender systems"],"title":"Multi-armed bandits","type":"talk"},{"authors":["Cameron Smith"],"categories":["Mathematical Biology"],"content":"","date":1603361700,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603361700,"objectID":"062558c0c2d85ac6148437e1a9e5d562","permalink":"https://jeremyworsfold.github.io/pss/cameron/","publishdate":"2020-10-22T10:15:00Z","relpermalink":"/pss/cameron/","section":"pss","summary":"In this somewhat maths deficient PSS talk, I plan to convince you that hybrid models are very useful for simulating multi-scale systems. And if not, well at least there is (virtual) cake afterwards! Join me for a (mostly pictorial) journey through several different hybrid approaches to simulate reaction-diffusion systems; an important group of models for explaining, predicting and answering the big questions in biology such as: Why do some mice have belly spots? How can we stop the next big pandemic from destroying us all? (If only we had paid attention back then!) Why can’t a leopard change its spots (into stripes at the very least)?\nWe will then move onwards to some of my own work, creating new models which add in extra biological realism or simply fill a gap in the market. Health warning: may contain traces of maths, a pinch of biology and some weird images. Fun cannot be guaranteed.","tags":["Mathematical Biology"],"title":"Hybrid methods: innovative or a waste of time? You decide!","type":"talk"},{"authors":["Ed Gallagher"],"categories":["differential geometry","geometry"],"content":"There will be some equations and overviews of proofs, but it won\u0026rsquo;t be super technical, and there\u0026rsquo;ll also be nice pictures and diagrams so it should be possible to follow the talk without any knowledge of differential geometry at all!\n","date":1602756900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602756900,"objectID":"a4bf43e06f598ca7bf9d8a52fe6a64dc","permalink":"https://jeremyworsfold.github.io/pss/ed/","publishdate":"2020-10-15T10:15:00Z","relpermalink":"/pss/ed/","section":"pss","summary":"Differential geometry originated as the study of *curved* or *bent* spaces fixed in time; over the last 4 decades, however, geometers have overseen huge developments in the study of spaces which are not fixed but change, or *flow*, over time. One of the simplest and perhaps most natural examples is curve shortening flow, the topic I did my master's dissertation on, where essentially a curve *moves inwards with speed proportional to its bendiness.*\nIn this talk we will give an introduction to curve shortening flow and look at some of the (surprising?) ways in which it behaves, starting in the plane before moving onto surfaces. We will then briefly touch on mean curvature flow, a generalisation of curve shortening flow to higher dimensions, and see some of the applications of curve shortening flow in both pure maths and the real world.","tags":["differential geometry","geometry"],"title":"Curve Shortening Flow","type":"talk"},{"authors":["Piotr Morawiecki"],"categories":null,"content":"There will be some equations and overviews of proofs, but it won\u0026rsquo;t be super technical, and there\u0026rsquo;ll also be nice pictures and diagrams so it should be possible to follow the talk without any knowledge of differential geometry at all!\n","date":1602152100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602152100,"objectID":"7dea2106a9fe38356d84a1f144bf216d","permalink":"https://jeremyworsfold.github.io/pss/piotr/","publishdate":"2020-10-08T10:15:00Z","relpermalink":"/pss/piotr/","section":"pss","summary":"Why running science projects in schools is fun?","tags":null,"title":"From alco-rockets and neural networks in a can to international political incidents","type":"talk"}]