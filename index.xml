<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeremy Worsfold</title>
    <link>https://jeremyworsfold.github.io/</link>
      <atom:link href="https://jeremyworsfold.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Jeremy Worsfold</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-gb</language><lastBuildDate>Tue, 09 Feb 2021 11:15:00 +0000</lastBuildDate>
    <image>
      <url>https://jeremyworsfold.github.io/media/face.jpg</url>
      <title>Jeremy Worsfold</title>
      <link>https://jeremyworsfold.github.io/</link>
    </image>
    
    <item>
      <title>Week 2: 09/02/21</title>
      <link>https://jeremyworsfold.github.io/tutoring/week2/</link>
      <pubDate>Tue, 09 Feb 2021 11:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/tutoring/week2/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#outline-of-lecture-content&#34;&gt;Outline of lecture content&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#what-makes-a-well-posed-problem&#34;&gt;What makes a well posed problem?&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-is-a-positively-invariant-set&#34;&gt;What is a positively invariant set?&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#stability&#34;&gt;Stability&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#time-dependent-solution&#34;&gt;Time dependent solution&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#problem-sheet-1&#34;&gt;Problem sheet 1&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#question-1&#34;&gt;Question 1&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#question-2&#34;&gt;Question 2&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#question-3&#34;&gt;Question 3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#question-4&#34;&gt;Question 4&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h2 id=&#34;outline-of-lecture-content&#34;&gt;Outline of lecture content&lt;/h2&gt;
&lt;h3 id=&#34;what-makes-a-well-posed-problem&#34;&gt;What makes a well posed problem?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;solution exists (for at least as long as the prediction is required)&lt;/li&gt;
&lt;li&gt;the solution is unique&lt;/li&gt;
&lt;li&gt;the solution depends continuously on the initial condition and model parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-is-a-positively-invariant-set&#34;&gt;What is a positively invariant set?&lt;/h3&gt;
&lt;p&gt;A set $Y \subset X$ is positively invariant if $x(0) \in Y$ implies that $x(t) \in Y$ for all $t \in T$ with $t &amp;gt; 0$. (It
is negatively invariant if the same is true for all $t \in T$ with $t &amp;lt; 0$.)&lt;/p&gt;
&lt;h3 id=&#34;stability&#34;&gt;Stability&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Steady state: $x^*$, is where $f(x^*)=0$&lt;/li&gt;
&lt;li&gt;Stable: for any $\epsilon &amp;gt; 0$ there exists $\delta &amp;gt; 0$ such that $|x(t) − x^*| &amp;lt; \epsilon$ for all positive $t \in T$ whenever $|x_0 − x^*| &amp;lt; \delta$, and unstable otherwise.&lt;/li&gt;
&lt;li&gt;Asymptotically stable: if it is stable and there exists $\delta &amp;gt; 0$ such that $|x− x^*| \rightarrow 0$ as $t → \infty$ whenever $|x_0 − x^*| &amp;lt; \delta$.&lt;/li&gt;
&lt;li&gt;stable: start close, stay close.&lt;/li&gt;
&lt;li&gt;asym. stable: start close, converge to steady state.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;time-dependent-solution&#34;&gt;Time dependent solution&lt;/h3&gt;
&lt;p&gt;If $\frac{dx}{dt}=f(x)$ and $f(x_0)\neq0$, then
$$
t = \int_{x_0}^{x(t)}\frac{ds}{f(s)}
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If $x(t)$ is not a steady state, $x^*$,then it either tends to a steady state or it tends to $\pm\infty$&lt;/li&gt;
&lt;li&gt;If the model system is well-posed, then $x(t)$ must either be a steady state solution, $x^*$, or strictly monotonic.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;problem-sheet-1&#34;&gt;Problem sheet 1&lt;/h2&gt;
&lt;p&gt;The main point of most of this module is to test your abilities to turn a problem often in the form of a paragraph into a mathematical model which you then solve and then learn something about the behaviour of the system or whatever from the solution. Because of this I will not just give you the start of the problem because that is often half of the difficulty in the question. Learning how to do this quickly and effectively now will help you a lot later down the road, so do keep trying even if you feel stuck.&lt;/p&gt;
&lt;h3 id=&#34;question-1&#34;&gt;Question 1&lt;/h3&gt;
&lt;div class=&#34;alert alert-&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;One question you might ask about this problem is why does the dead plant matter have a decreasing number of radioactive carbon atoms but the carbon in the atmosphere does not? This is a bit of a side note but essentially Carbon-14 is produced when particles in the upper atmosphere and troposphere collide with cosmic particles and all sorts of interesting physics happens. These interactions sometimes produce neutrons which can then collide with the abundand nitrogen in the air to make Carbon-14 with the following interaction:&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;14&lt;/sup&gt;&lt;sub&gt;7&lt;/sub&gt;N + n → &lt;sup&gt;14&lt;/sup&gt;&lt;sub&gt;6&lt;/sub&gt;C + p&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Anyway the point is that once the plant dies it is separated from this system of radioactive carbon being created and decaying so we just have the decay. From the lectures we saw that the general radioactive decay equation is
$$\dot{x}(t) = -\lambda x(t)$$
which has the solution
$$x(t) = x(0)e^{-\lambda t} $$.
The key is to figure out what this rate of decay $\lambda$ is in terms of the half-life which we are given. The half-life is the time, $T_{1/2}$ for the amount of &lt;sup&gt;14&lt;/sup&gt;C to half so we can write that
$$ \frac{1}{2} = \exp\left[-\lambda T_{1/2}\right]$$
which rearranges to give
$$ \lambda = \frac{\ln(2)}{T_{1/2}}$$.
From here, all we need to do is recognise that we want to find the time $T$ where the activity is $0.97$ and we know that initially the activity was $6.68$ so we have 
$$ 0.97 = 6.68 e^{-\lambda T}$$.
With some more rearranging we get the solution 
$$ T = \frac{T_{1/2}}{\ln(2)}\ln\left(6.68/0.97\right) \approx 1.5951 \times 10^4 \text{ years}$$&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Wondered why the radioactive decay is what it is? It may make intuitive sense to you or it may not. Either way a nice way to think about it is that the probability of a single atom decaying in time $t$ is an exponentially distributed random variable with rate parameter $\lambda$. Over a period of time $t$ the probability that is has not decayed is $1-F(t)=1-e^{-\lambda t}$, where $F(t)$ is the cumulative distribution. If all of the atoms can be treated as independent (and as long as the number of particles is large) then the expected number of particles left by time t is $\langle N\rangle = N_0 e^{-\lambda t}$.&lt;/p&gt;
&lt;p&gt;Or we could say that rate of one atom decaying is $\lambda$ so the rate of any of the $N$ particles decaying is $N\lambda$ so this gives us an instantaneous rate of change of the system so $dN=-N\lambda dt$.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m sure given some more thought, one of you could make this a bit more rigourous.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;question-2&#34;&gt;Question 2&lt;/h3&gt;
&lt;p&gt;Should be relatively straight forward&lt;/p&gt;
&lt;h3 id=&#34;question-3&#34;&gt;Question 3&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;a) What do the two terms on the RHS mean physically?&lt;/li&gt;
&lt;li&gt;b) What does the steady state distribution mean for the ODE?&lt;/li&gt;
&lt;li&gt;c) This one is just a following through the maths so I&amp;rsquo;ll leave that up to you.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;question-4&#34;&gt;Question 4&lt;/h3&gt;
&lt;p&gt;This question is pretty straight forwards in terms of setting up the problem. All we need to do is solve the ODE in the case that $c_i=c_a=\text{ constant}$ and substitute in the initial condition that the concentration starts at some value $c_0=c(0)$ so we can substitute this condition in for any constants of integration. Then we do the same for the second case.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;trick&lt;/em&gt; in part b is to notice that we can rewrite the ODE as
$$
\begin{aligned}
c_b&#39;(t) &amp;amp; = \phi \left( c_a \left( \lambda + \phi \alpha (1-\lambda) t \right)- c_b(t)\right) \\\&lt;br&gt;
c_b&#39;(t) + \phi c_b(t) &amp;amp; = \phi\left(c_a\left(\lambda+\phi\alpha(1-\lambda)t\right)\right) \\\&lt;br&gt;
\frac{d}{dt}\left\{c_b(t)e^{\phi t}\right\} &amp;amp; = e^{\phi t}\phi\left(c_a\left(\lambda+\phi\alpha(1-\lambda)t\right)\right)
\end{aligned}
$$
where we&amp;rsquo;ve used an integrating factor. From here we can integrate both sides and use integration by parts for the $t\exp[\phi t]$ term.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inverse Problems, Krylov Methods, and Dog Pictures</title>
      <link>https://jeremyworsfold.github.io/pss/sebscott/</link>
      <pubDate>Mon, 18 Jan 2021 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/sebscott/</guid>
      <description>&lt;p&gt;By the end of this PSS talk you should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand how inverse problems may arise and why they can be finicky to deal with&lt;/li&gt;
&lt;li&gt;Feel happy with the idea of Tikhonov regularisation&lt;/li&gt;
&lt;li&gt;Get the gist of how iterative Krylov methods, such as LSQR and FLSQR, work&lt;/li&gt;
&lt;li&gt;Be able to name my dogs&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>An overview of moving mesh methods</title>
      <link>https://jeremyworsfold.github.io/pss/simone/</link>
      <pubDate>Mon, 11 Jan 2021 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/simone/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Highlights from the theory of random growth</title>
      <link>https://jeremyworsfold.github.io/pss/tomfinn/</link>
      <pubDate>Mon, 04 Jan 2021 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/tomfinn/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Beginners Guide to using Balena</title>
      <link>https://jeremyworsfold.github.io/post/balenaguide/</link>
      <pubDate>Mon, 21 Dec 2020 09:44:52 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/post/balenaguide/</guid>
      <description>&lt;p&gt;This informal guide is for people new to using Balena and effectively want to take code they have written to run on their laptop in something like Python or MATLAB and now run it on Balena. This is by no means exhaustive and there is much more information on the &lt;a href=&#34;https://wiki.bath.ac.uk/display/BalenaHPC/Getting&amp;#43;Started&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki page&lt;/a&gt;. In fact, much of the information on Balena here is just condensed from that website. The rest of this guide is general tips on how to transfer files and navigate the environment.&lt;/p&gt;
&lt;h2 id=&#34;logging-onto-balena&#34;&gt;Logging onto Balena&lt;/h2&gt;
&lt;h3 id=&#34;purely-from-a-terminal&#34;&gt;Purely from a terminal&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;If you are on campus you can skip the first step and ssh directly into balena&lt;/strong&gt;. Otherwise open a terminal and type&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh user123@linux.bath.ac.uk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This opens up a link to the uni server (&lt;code&gt;ssh&lt;/code&gt; stands for secure shell). Put in your password and then do the same again but change linux to balena:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh user123@balena.bath.ac.uk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great, you are now in your personal home directory on balena.&lt;/p&gt;
&lt;h3 id=&#34;kitty&#34;&gt;Kitty&lt;/h3&gt;
&lt;p&gt;Using the image below taken from the &lt;a href=&#34;https://wiki.bath.ac.uk/display/BalenaHPC/Getting&amp;#43;Started&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki page&lt;/a&gt; should be sufficient in explaining how to login using Kitty.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jeremyworsfold.github.io/media/kitty.png&#34; alt=&#34;how to login with kitty&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;transferring-data-or-files&#34;&gt;Transferring data or files&lt;/h2&gt;
&lt;p&gt;Since you are running your code on balena, you will at some point have to move around data using a terminal so I would recommend doing this for all the steps. The added benefit of this is that your commands are stored so you can always just reuse your previous commands using the up arrows if you can&amp;rsquo;t remember exactly what a command should be.&lt;/p&gt;
&lt;p&gt;To move files between your PC and balena you will sadly have to go through your uni drive unless you are on campus.&lt;/p&gt;
&lt;h3 id=&#34;from-h-drive-to-balena&#34;&gt;From H drive to balena&lt;/h3&gt;
&lt;p&gt;You can simply copy files across using linux &lt;code&gt;cp&lt;/code&gt; commands and the fact that your &lt;code&gt;H&lt;/code&gt; drive is called &lt;code&gt;$BUCSHOME&lt;/code&gt; on balena. For example, run the command&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -r folder/with/data $BUCSHOME/destination/folder
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to copy a folder with data from balena to your &lt;code&gt;H&lt;/code&gt; drive.&lt;/p&gt;
&lt;h3 id=&#34;from-local-pc-to-h-drive&#34;&gt;From local PC to H drive&lt;/h3&gt;
&lt;p&gt;You can transfer data to and from University personal drive from your PC by using &lt;code&gt;scp&lt;/code&gt; which stands for secure copy and essentially opens up a &lt;code&gt;ssh&lt;/code&gt; portal and then closes it again once the files are transferred.&lt;/p&gt;
&lt;h3 id=&#34;sending-files&#34;&gt;Sending files&lt;/h3&gt;
&lt;p&gt;Type one of these &lt;strong&gt;from within a terminal/kitty/putty on your PC&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scp path/to/directory/f.txt user123@linux.bath.ac.uk:path/to/directory/
scp -r path/to/directory/ user123@linux.bath.ac.uk:path/to/directory/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first will transfer the file &lt;code&gt;file.txt&lt;/code&gt; whereas the second will transfer the whole directory.&lt;/p&gt;
&lt;h3 id=&#34;retrieving-files&#34;&gt;Retrieving files&lt;/h3&gt;
&lt;p&gt;This is the same as above but with the directories reversed in order, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scp user123@linux.bath.ac.uk:path/to/remote/directory/file.txt path/to/local/directory/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively if you want, you can use something more familiar which is visual. For linux this would be mounting your Uni drive to your PC using a command called &lt;code&gt;sshfs&lt;/code&gt;. For Windows you can download an application called WinSCP which looks like it hasn&amp;rsquo;t changed since 2005 and basically hasn&amp;rsquo;t but it&amp;rsquo;s neat and very useful if that&amp;rsquo;s your thing. A quick google of either of these should give you the information you need. Finally you can use a browser to do this instead if you would like, see &lt;a href=&#34;https://www.bath.ac.uk/guides/access-and-share-your-work-online-using-files-bath/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3 id=&#34;where-do-i-store-my-files&#34;&gt;Where do I store my files?&lt;/h3&gt;
&lt;p&gt;So, I will be the first to admit that I have ran long jobs from my &lt;code&gt;$HOME&lt;/code&gt; directory. This is bad. It will work but it is faster and better apparently to run your jobs in the &lt;code&gt;$SCRATCH&lt;/code&gt;. It&amp;rsquo;ll be tedious at first but getting used to using simple commands like &lt;code&gt;cp&lt;/code&gt; and \verb!ls! will be really helpful. Make sure to save all of your results rather than just plotting graphs at the end, you never know when you might want to alter figures and need the original data again. I would recommend just saving your data and maybe copying it back to your PC to visualise the results. See my guide on how to layout and use a python package for a small research project for more detailed recommendations on how to handle results and plotting for Python specifically.&lt;/p&gt;
&lt;h2 id=&#34;jobscripts&#34;&gt;Jobscripts&lt;/h2&gt;
&lt;p&gt;The thing you run is the jobscript using the command&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sbatch &amp;lt;name of jobscript&amp;gt;.slm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Below I&amp;rsquo;ve put in an example jobscript that has been adapted from the one given in the scientific computing module. Make sure you are in the directory of the jobscript when you call it and that the program you want to run is in the same folder or that you have specified where it is in the jobscript.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash 
#   
# Specify the queue
#SBATCH

# Choose name of job (name of executable) 
#SBATCH --job-name = &amp;lt;name of script&amp;gt;.py 
# Choose the number of nodes &amp;amp; processors per node: 
#SBATCH --nodes=1 
#SBATCH --ntasks-per-node=1 
# 
# Choose the time your code will need at most:
#SBATCH --time=05:00:00 
# Add any module which need to be loaded here 
module load python3

echo Running on host `hostname`
echo &amp;quot;Starting job...&amp;quot;
# Run the python script $SLUTM_JOB_NAME 
# If your script is in MATLAB obviously this needs to be changed
python3 $SLURM_JOB_NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The important bits to check are the job name and the time. For ease I have just made the job name the same as the name of the script you want to run. I&amp;rsquo;ll explain later what the job name is actually used for. Balena allows you free, unlimited usage for jobs which are under 6 hours long so make sure you know approximately how long it will take and change the time given accordingly. Nothing will happen if you overestimate how long you need but it could be helpful for other users to know when their jobs will start if balena is busy and puts your job in ahead of theirs.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re using MATLAB and the paralellisation package thing that I know nothing about, you&amp;rsquo;ll want to change the number of tasks per node to the maximum of 16 I imagine. Otherwise, unless you&amp;rsquo;ve done clever things with the &lt;code&gt;MPI4pi&lt;/code&gt; or &lt;code&gt;multiprocessing&lt;/code&gt; packages in python (which I would highly recommend you learn about if you need to run long programs a lot because this could increase your speed by 16 times or more) then you will probably just be using the one processor and so don&amp;rsquo;t need to change anything.&lt;/p&gt;
&lt;h3 id=&#34;checking-jobs&#34;&gt;Checking Jobs&lt;/h3&gt;
&lt;p&gt;You will get an output file with the extension &lt;code&gt;.out&lt;/code&gt; telling you everything that happens in the job that would normally printed to the screen if you ran it from a terminal.&lt;/p&gt;
&lt;p&gt;To check your progress or see if the job has started you can find your jobs by typing&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;squeue -u user123
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to use Python for scientific research</title>
      <link>https://jeremyworsfold.github.io/slides/python-coding/</link>
      <pubDate>Mon, 14 Dec 2020 21:44:52 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/slides/python-coding/</guid>
      <description>&lt;h2 id=&#34;how-to-use-python-for-scientific-research&#34;&gt;How to use Python for scientific research&lt;/h2&gt;
&lt;h3 id=&#34;maintaining-a-personal-python-package-for-scientific-research&#34;&gt;Maintaining a personal Python package for scientific research&lt;/h3&gt;
&lt;hr&gt;
&lt;h2 id=&#34;our-project-should&#34;&gt;Our project should&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Save data&lt;/li&gt;
&lt;li&gt;Separate plotting from time-consuming code&lt;/li&gt;
&lt;li&gt;Have good documentation&lt;/li&gt;
&lt;li&gt;Be Distributable&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;why-python&#34;&gt;Why Python?&lt;/h2&gt;
&lt;p&gt;It is personal preference however&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;test&#34;&gt;test&lt;/h2&gt;
&lt;hr&gt;
&lt;section data-no-process&gt;
&lt;section data-auto-animate&gt;
  &lt;h3&gt;Auto-Animate&lt;/h3&gt;
&lt;/section&gt;
&lt;section data-auto-animate&gt;
  &lt;h3 style=&#34;margin-top: 100px; color: red;&#34;&gt;Auto-Animate&lt;/h3&gt;
&lt;/section&gt;
&lt;/section data-no-process&gt;
&lt;hr&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;
&lt;p&gt;Root directory&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exampleproject
│   README.md
│   setup.py
│
├───data
├───docs
├───exampleproject
├───notebooks
└───scripts
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;


&lt;div id=&#34;chart-763842915&#34; class=&#34;chart&#34;&gt;&lt;/div&gt;
&lt;script&gt;
  (function() {
    let a = setInterval( function() {
      if ( typeof window.Plotly === &#39;undefined&#39; ) {
        return;
      }
      clearInterval( a );

      Plotly.d3.json(&#34;./annealing.json&#34;, function(chart) {
        Plotly.plot(&#39;chart-763842915&#39;, chart.data, chart.layout, {responsive: true});
      });
    }, 500 );
  })();
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>MA20220 Week 1</title>
      <link>https://jeremyworsfold.github.io/slides/ma20220week1/</link>
      <pubDate>Mon, 14 Dec 2020 21:44:52 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/slides/ma20220week1/</guid>
      <description>&lt;h2 id=&#34;points-from-last-problem-sheet&#34;&gt;Points from last problem sheet&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;main-points&#34;&gt;Main points&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Save data&lt;/li&gt;
&lt;li&gt;Separate plotting from time-consuming code&lt;/li&gt;
&lt;li&gt;Have good documentation&lt;/li&gt;
&lt;li&gt;Be Distributable&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;summary-of-last-weeks-lectures&#34;&gt;Summary of last week&amp;rsquo;s lectures&lt;/h2&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>MA20221 Week 2</title>
      <link>https://jeremyworsfold.github.io/slides/ma20221week2/</link>
      <pubDate>Mon, 14 Dec 2020 21:44:52 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/slides/ma20221week2/</guid>
      <description>&lt;h1 id=&#34;ma20221-week-2&#34;&gt;MA20221 Week 2&lt;/h1&gt;
&lt;h2 id=&#34;definitions&#34;&gt;Definitions&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-makes-a-well-posed-problem&#34;&gt;What makes a well posed problem?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;fragment &#34; &gt;
solution exists (for at least as long as the prediction is required)
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;fragment &#34; &gt;
the solution is unique
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;fragment &#34; &gt;
the solution depends continuously on the initial condition and model parameters
&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-a-positively-invariant-set&#34;&gt;What is a positively invariant set?&lt;/h2&gt;
&lt;p&gt;A set $Y \subset X$ is positively invariant if $x(0) \in Y$ implies that $x(t) \in Y$ for all $t \in T$ with $t &amp;gt; 0$. (It
is negatively invariant if the same is true for all $t \in T$ with $t &amp;lt; 0$.)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;stability&#34;&gt;Stability&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Steady state: &lt;span class=&#34;fragment &#34; &gt;
$x^*$, is where $f(x^*)=0$
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Stable: &lt;span class=&#34;fragment &#34; &gt;
for any $\epsilon &amp;gt; 0$ there exists $\delta &amp;gt; 0$ such that $|x(t) − x^*| &amp;lt; \epsilon$ for all positive $t \in T$ whenever $|x_0 − x^*| &amp;lt; \delta$, and unstable otherwise.
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Asymptotically stable: &lt;span class=&#34;fragment &#34; &gt;
if it is stable and there exists $\delta &amp;gt; 0$ such that $|x− x^*| \rightarrow 0$ as $t → \infty$ whenever $|x_0 − x^*| &amp;lt; \delta$.
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;fragment &#34; &gt;
stable: start close, stay close. asym. stable: start close, converge to steady state.
&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;time-dependent-solution&#34;&gt;Time dependent solution&lt;/h3&gt;
&lt;p&gt;If $\frac{dx}{dt}=f(x)$ and $f(x_0)\neq0$, then
$$
t = \int_{x_0}^{x(t)}\frac{ds}{f(s)}
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If $x(t)$ is not a steady state, $x^*$,then it either tends to a steady state or it tends to $\pm\infty$&lt;/li&gt;
&lt;li&gt;If the model system is well-posed, then $x(t)$ must either be a steady state solution, $x^*$, or strictly monotonic.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Modelling hair follicle development and formation of periodic patterns of cells.</title>
      <link>https://jeremyworsfold.github.io/pss/shahzeb/</link>
      <pubDate>Thu, 10 Dec 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/shahzeb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>An Invitation to Probability Theory</title>
      <link>https://jeremyworsfold.github.io/pss/yisheng/</link>
      <pubDate>Thu, 03 Dec 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/yisheng/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Will a Large Complex System be Stable?</title>
      <link>https://jeremyworsfold.github.io/pss/yvonne/</link>
      <pubDate>Thu, 26 Nov 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/yvonne/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Blowups: An algebraic-geometric approach to resolving singularities</title>
      <link>https://jeremyworsfold.github.io/pss/mattturner/</link>
      <pubDate>Thu, 19 Nov 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/mattturner/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Concentrated Vorticity in the Euler equations</title>
      <link>https://jeremyworsfold.github.io/pss/zoe/</link>
      <pubDate>Thu, 12 Nov 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/zoe/</guid>
      <description></description>
    </item>
    
    <item>
      <title>What is Measure Theory, and How does it Affect Me?</title>
      <link>https://jeremyworsfold.github.io/pss/willgraham/</link>
      <pubDate>Thu, 05 Nov 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/willgraham/</guid>
      <description>&lt;p&gt;The reaction I usually get when I tell people my PhD concerns a large amount of measure theory can be summarised fairly well by the following diagram:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jeremyworsfold.github.io/media/willgraham.png&#34; alt=&#34;measure theory meme&#34;&gt;&lt;/p&gt;
&lt;p&gt;Whilst having an intricate knowledge of the ins and outs of measure theory is by no means a requirement for many applications of maths in the real world; it does secretly underpin a lot of the more familiar (and friendly!) things that we use in applied maths, and probability.
• Have you ever wondered why PDFs are such a big deal when working in probability?
• Have you ever used FEM or Fourier transforms to solve a problem?
• Have you ever tried to break up a chocolate bar, and then reassemble the pieces into two chocolate bars of equal size to the first????&lt;/p&gt;
&lt;p&gt;Disclaimer: I will be limiting the technical details to the bare minimum I need, and will include diagrams and analogies wherever possible. I’m also not going to be assuming any prior knowledge of measure theory, so anyone should be able to follow along even if they’ve never seen, never heard, or have actively avoided this topic before. It is not my intention to give a technical analysis talk at 10:15 in the morning, no-one wants that, not even me!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multi-armed bandits</title>
      <link>https://jeremyworsfold.github.io/pss/jeremy/</link>
      <pubDate>Thu, 29 Oct 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/jeremy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hybrid methods: innovative or a waste of time? You decide!</title>
      <link>https://jeremyworsfold.github.io/pss/cameron/</link>
      <pubDate>Thu, 22 Oct 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/cameron/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Curve Shortening Flow</title>
      <link>https://jeremyworsfold.github.io/pss/ed/</link>
      <pubDate>Thu, 15 Oct 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/ed/</guid>
      <description>&lt;p&gt;There will be some equations and overviews of proofs, but it won&amp;rsquo;t be super technical, and there&amp;rsquo;ll also be nice pictures and diagrams so it should be possible to follow the talk without any knowledge of differential geometry at all!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From alco-rockets and neural networks in a can to international political incidents</title>
      <link>https://jeremyworsfold.github.io/pss/piotr/</link>
      <pubDate>Thu, 08 Oct 2020 10:15:00 +0000</pubDate>
      <guid>https://jeremyworsfold.github.io/pss/piotr/</guid>
      <description>&lt;p&gt;There will be some equations and overviews of proofs, but it won&amp;rsquo;t be super technical, and there&amp;rsquo;ll also be nice pictures and diagrams so it should be possible to follow the talk without any knowledge of differential geometry at all!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
